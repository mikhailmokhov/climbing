name: Apps / Auth build and deploy

on:
  workflow_dispatch: {}
  push:
    branches:
      - master

    paths:
      - 'apps/auth/**'
      - 'k8s/**'
      - '.github/workflows/auth-deploy.yml'
env:
  IMAGE_NAME: steel8rat/auth
  IMAGE_TAG: ${{ github.sha }} # take commit sha as an image tag
  K8S_CLUSTER_NAME: k8s-routesetter-sfo-3

jobs:
  auth_build_and_deploy:
    name: Build Auth App
    runs-on: ubuntu-latest
    env:
      workingDirectory: ./apps/auth

    steps:
      - uses: actions/checkout@v2

      - name: Set up AdoptOpenJDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Set up gradle cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build with Gradle
        working-directory: ${{ env.workingDirectory }}
        run: ./gradlew build

      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKERHUB_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Artifacts
        run: ls -R
        working-directory: apps/auth/build/libs

      - name: Build Docker image
        run: docker build --build-arg JAR_FILE=apps/auth/build/libs/*-SNAPSHOT.jar --file apps/auth/Dockerfile --tag $IMAGE_NAME:$IMAGE_TAG .

      - name: Push image to Dockerhub
        run: docker push $IMAGE_NAME:$IMAGE_TAG

      - name: Update api-server deployment file
        run: sed -i 's|<IMAGE_NAME>|'${IMAGE_NAME}:${IMAGE_TAG}'|' $GITHUB_WORKSPACE/k8s/auth.yml

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Save DigitalOcean kubeconfig
        run: doctl kubernetes cluster kubeconfig save $K8S_CLUSTER_NAME

      - name: Deploy to DigitalOcean Kubernetes
        run: kubectl apply -f $GITHUB_WORKSPACE/k8s

      - name: Verify deployments
        run: kubectl get deployments --output name | xargs -n1 kubectl rollout status

      - name: Slack notification
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: github # Optional. (defaults to webhook app)
          SLACK_CHANNEL: routesetter # Optional. (defaults to webhook)
          SLACK_AVATAR: repository # Optional. can be (repository, sender, an URL) (defaults to webhook app avatar)
        uses: Ilshidur/action-slack@2.0.2
        with:
          args: Auth is deployed to ${K8S_CLUSTER_NAME}

      - name: Remove old artifacts
        uses: c-hive/gha-remove-artifacts@v1
        with:
          age: '1 hour'