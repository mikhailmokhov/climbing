# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: image-search build

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  pull_request:
    branches:
      - master

env:
  # Image's name.
  IMAGE_NAME: steel8rat/image-search

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Grant execute permission for gradlew

        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build

      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: Package
          path: build/libs

  build_docker_image:
    needs: build_and_test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: Package
          path: build/libs

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: build/libs

      - name: Docker Login
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

      - name: Build Docker image
        run: docker build --build-arg JAR_FILE=build/libs/*.jar --file Dockerfile --tag $IMAGE_NAME:latest .

      - name: Push image to Dockerhub
        run: docker push $IMAGE_NAME:latest

#  deploy_to_do:
#    needs: build_docker_image
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Install doctl
#        uses: digitalocean/action-doctl@v2
#        with:
#          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
#
#      - name: Save DigitalOcean kubeconfig
#          run: doctl kubernetes cluster kubeconfig save image-search
